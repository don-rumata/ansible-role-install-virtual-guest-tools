---
- name: Download VirtIO .cat 4 Windows
  when:
    - ansible_os_family == 'Windows'
    - ansible_system_vendor == 'QEMU'
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  win_get_url:
    url: "{{ item }}"
    dest: '{{ ansible_env.TMP }}'
  with_items:
    - '{{ virtual_guest_tools_virtio_certs_urls }}'
  register: download_virtio_certs_result

# 2 install the spice client correctly
- name: Copy vioser.cat from ansible role to Windows
  when:
    - ansible_os_family == 'Windows'
    - ansible_system_vendor == 'QEMU'
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  win_copy:
    src: files/vioser.cat
    dest: '{{ ansible_env.TMP }}\'

- name: Get the paths of the downloaded certs
  when:
    - ansible_os_family == 'Windows'
    - ansible_system_vendor == 'QEMU'
  set_fact:
    download_virtio_certs_result_fact:
      "{{ download_virtio_certs_result
      | json_query(query_download_virtio_certs_result) }}"
  vars:
    query_download_virtio_certs_result:
      "results[].dest"

- name: Install VirtIO certs 4 Windows
  when:
    - ansible_os_family == 'Windows'
    - ansible_system_vendor == 'QEMU'
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  win_certificate_store:
    path: "{{ item }}"
    state: present
    store_location: LocalMachine
    store_name: TrustedPublisher
  with_items:
    - '{{ download_virtio_certs_result_fact }}'
    - '{{ ansible_env.TMP }}\vioser.cat'

- name: Install QEMU guest agent 4 Windows
  when:
    - ansible_os_family == 'Windows'
    - ansible_system_vendor == 'QEMU'
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  win_package:
    path: '{{ virtual_guest_tools_qemu_ga_win_amd64_msi_url }}'
    # product_id: QEMU guest agent
    creates_service: QEMU-GA
    state: present
    wait: true
  # register: qemu_ga_install_status

- name: Install SPICE guest tools 4 Windows 7
  when:
    - ansible_os_family == 'Windows'
    - ansible_system_vendor == 'QEMU'
    - ansible_distribution_major_version == '6'
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  win_package:
    path: '{{ virtual_guest_tools_virtio_win_win7_amd64_msi_url }}'
    # product_id: Virtio-win-driver-installer
    creates_service: BalloonService
    state: present
    wait: true
    arguments:
      - /S
  # register: spice_install_status

- name: Install VirtIO guest utils 4 Windows
  when:
    - ansible_os_family == 'Windows'
    - ansible_system_vendor == 'QEMU'
    - ansible_distribution_major_version != '6'
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  win_package:
    path: '{{ virtual_guest_tools_virtio_win_amd64_msi_url }}'
    # product_id: Virtio-win-driver-installer
    creates_service: BalloonService
    state: present
    wait: true
  # register: virtio_win_install_status

- name: Install SPICE webdavd 4 Windows
  when:
    - ansible_os_family == 'Windows'
    - ansible_system_vendor == 'QEMU'
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  win_package:
    path: '{{ virtual_guest_tools_spice_webdavd_win_amd64_msi_url }}'
    # product_id: spice webdavd
    creates_service: spice-webdavd
    state: present
    wait: true
  # register: spice_webdavd_install_status

# - name: Reboot 4 QEMU GA start normally 4 Windows 7
#   when:
#     - ansible_os_family == 'Windows'
#     - ansible_system_vendor == 'QEMU'
#     - ansible_distribution_major_version == '6'
#     - qemu_ga_install_status.changed
#       or
#       spice_install_status.changed
#       or
#       spice_webdavd_install_status.changed
#   become: yes
#   become_method: runas
#   become_flags: logon_type=new_credentials logon_flags=netcredentials_only
#   win_reboot:
